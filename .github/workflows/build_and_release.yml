name: Build and Release Multiple Addons

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [skymen_fmod, skymen_fmod_cpp, skymen_fmod_js]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build (Matrix)
        run: |
          cd ${{ matrix.project }}
          npm ci
          npm run build
          npm run doc
          last_modified_file=$(ls -Art dist | tail -n 1)
          version=$(echo $last_modified_file | sed -n 's/.*-\([0-9.]*\).c3addon/\1/p')
          echo "${{ matrix.project }}_version=$version" >> $GITHUB_ENV
          echo "Last modified file version: $version"
          echo "$version" > ../${{ matrix.project }}-version.txt
          echo "../${{ matrix.project }}-version.txt"
          cat ../${{ matrix.project }}-version.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.project }}
          path: ${{ matrix.project }}/dist/*.c3addon

      - name: Upload Version Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.project }}-version
          path: ${{ matrix.project }}-version.txt

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release Tag
        run: |
          fmod_version=$(cat artifacts/skymen_fmod-version/skymen_fmod-version.txt)
          fmod_cpp_version=$(cat artifacts/skymen_fmod_cpp-version/skymen_fmod_cpp-version.txt)
          fmod_js_version=$(cat artifacts/skymen_fmod_js-version/skymen_fmod_js-version.txt)
          echo "FMOD v$fmod_version | JS v$fmod_js_version | C++ v$fmod_cpp_version"
          echo "$(fmod_version)_$(fmod_js_version)_$(fmod_cpp_version)"
          echo "FMOD v$fmod_version | JS v$fmod_js_version | C++ v$fmod_cpp_version" > release_name.txt
          echo "$(fmod_version)_$(fmod_js_version)_$(fmod_cpp_version)" > release_tag.txt
          echo "RELEASE_TAG=$(cat release_tag.txt)" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(cat release_name.txt)" >> $GITHUB_ENV

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.RELEASE_TAG }}
          name: ${{ env.RELEASE_NAME }}
          body: "Release containing FMOD, JS, and C++ Addons"
          allowUpdates: true
          makeLatest: true
          artifacts: |
            artifacts/skymen_fmod/*.c3addon
            artifacts/skymen_fmod_cpp/*.c3addon
            artifacts/skymen_fmod_js/*.c3addon
